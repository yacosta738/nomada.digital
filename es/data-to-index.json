[{"content":" figure.lazy { display: none; } La astronomía y la programación son dos de mis pasiones que en esta ocasión he decidido juntar. Con este objetivo crearemos una web sencilla para llevar la cuenta regresiva de cuantos días faltan hasta el nuevo año simulando el movimiento del planeta tierra. El demo se puede apreciar en el siguiente link https://yacosta738.github.io/countdown-to-new-year/\n figure.lazy { display: none; } Lo primero es crear un fichero style.css donde se define el estilo y la órbita de cada planeta:\n html { box-sizing: border-box; } html *, html *:before, html *:after { box-sizing: inherit; } body { display: flex; justify-content: center; align-items: center; width: 100vw; height: 100vh; overflow: hidden; font-size: 62.5%; background-color: #121212; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; } .solar-system { position: relative; width: 100%; max-width: 700px; padding-top: 100%; right: -50%; } @media (min-width: 700px) { .solar-system { padding-top: 700px; } } /*** ORBITS ***/ .orbit { position: absolute; top: 50%; left: 50%; border: 2px dotted rgba(84 84 84 / 15%); border-radius: 100%; transform: translate(-50%, -50%); } .orbit-sun { width: calc(50%); height: calc(50%); border: 1px dotted #ff6600; background: #ffcc00; } .orbit-sun:before { content: \u0026quot;\u0026quot;; background: #ff660017; width: 99%; height: 99%; display: block; margin-left: 0.5%; margin-top: 0.5%; border-radius: 100%; box-shadow: 0 0 10em 5em #ff66006b, 0 0 100px 50px #ff66006b inset, 0 0 10px 5px #ffcc00f2; } .orbit.orbit-sun:after { content: \u0026quot;SUN\u0026quot;; color: #ffa200; top: 50%; position: absolute; left: -3.5em; } .orbit-mercury { width: calc(100%); height: calc(100%); transform: translate(-50%, -50%); } .orbit-venus { width: calc(150%); height: calc(150%); transform: translate(-50%, -50%); } .orbit-earth { width: calc(200%); height: calc(200%); } .orbit-earth:after { content: \u0026quot;\u0026quot;; border: 2px solid red; width: 1em; height: 1em; display: block; position: relative; border-color: #54cbeb #54cbeb transparent transparent; transform: rotate(-50deg); border-width: 2px 2px 0 0; top: 52.75%; left: -0.5em; -webkit-animation: blinker 2s linear infinite; animation: blinker 2s linear infinite; } .orbit-mars { width: calc(280%); height: calc(280%); transform: translate(-50%, -50%); } .orbit-asteroids { width: calc(380%); height: calc(380%); transform: translate(-50%, -50%) rotate(0deg); } /*** PLANETS ***/ .planet { position: absolute; top: 50%; border-radius: 100%; opacity: 0; transform: translateY(-50%); transition: opacity 0s ease 0s; } .planet-mercury { left: -6px; width: 10px; height: 10px; transition-duration: 1s; background: #bcc1c9; } .planet-venus { left: -8px; width: 14px; height: 14px; transition-duration: 2s; background: #ec5f24 } .planet-earth { left: -13px; width: 24px; height: 24px; transition-duration: 3s; z-index: 1; } .planet-mars { left: -9px; width: 18px; height: 18px; transition-duration: 4s; background: #d83e3c; } .planet-asteroids { left: -38px; width: 308px; height: 1500px; transition: all 5s ease 0s; } .planet-mercury:before { content: \u0026quot;MERCURY\u0026quot;; color: #bcc1c9; margin-left: 15px; top: 0px; position: absolute; height: 10px; line-height: 10px; } .planet-venus:before { content: \u0026quot;VENUS\u0026quot;; color: #ec5f24; margin-left: 21px; top: 1px; position: absolute; height: 14px; line-height: 14px; } .planet-earth:before { content: \u0026quot;EARTH\u0026quot;; color: #54cbeb; margin-left: 29px; top: 1px; position: absolute; height: 24px; line-height: 24px; } .planet-mars:before { content: \u0026quot;MARS\u0026quot;; color: #d83e3c; margin-left: 23px; top: 1px; position: absolute; height: 18px; line-height: 18px; } .planet-asteroids:before { content: \u0026quot;ASTEROID BELT\u0026quot;; color: #666666; margin-left: 8em; top: 36.75%; position: absolute; } .planet-mars:after, .planet-venus:after, .planet-mercury:after, .planet-earth:after { content: \u0026quot;\u0026quot;; background: linear-gradient(105deg, rgba(0,0,0,1), rgba(0,0,0,0.6), transparent, transparent); display: block; width: 100%; height: 100%; border-radius: 100%; box-shadow: 0 0 3px 2px #ffffff26; opacity: 0.8; position: absolute; top: 0; left: 0; } .planet-earth:after { box-shadow: 0 0 5px 3px #54cbeb5c; } .planet img { width: 100%; } /*** SELECTED DAYS ***/ .new-year-line, .winter-solstice-line { width: 12em; border-bottom: 2px dotted white; position: absolute; left: -13.35em; top: 50%; z-index: -1; color: white; margin-top: -13px; margin-left: -50%; height: 14px; line-height: 1em; } .new-year-line:after, .winter-solstice-line:after { content: \u0026quot;\u0026quot;; width: 28px; height: 28px; display: block; float: right; position: absolute; background: #ffffff00; right: -28px; top: -1px; border: 2px dotted #fff; border-radius: 100%; } .winter-solstice-line { margin-top: 120px; left: -12.05em; } #cronoNewYear, #cronoWinterSolstice { left: 0; position: absolute; color: #fff; width: 100%; bottom: -17px; font-size: 1.1em; } #cronoNewYear span, #cronoWinterSolstice span { font-size: 0.75em; color: #666; } /*** WARNING ***/ #warning { position: fixed; left: 2em; bottom: 2em; background: rgb(0 0 0 / 0.75); height: 5em; width: 45em; font-size: 1.35em; color: #ffa200; z-index: 3; text-transform: uppercase; padding: 0; text-align: center; display: flex; justify-content: center; align-items: center; } #warning:before { content: \u0026quot; ! \u0026quot;; z-index: 2; font-size: 1.9em; margin-left: 1.15em; color: #ffa200; font-weight: bold; margin-top: 5px; } #warning:after { content: \u0026quot;\u0026quot;; background: #ffa200; position: absolute; left: 0; width: 5em; height: 5em; z-index: 0; } #warning p { display: block !important; float: left; width: 100%; margin: 0 !important; padding-left: 2.5em; } #warning p:before { content: \u0026quot;\u0026quot;; position: absolute; z-index: 1; border: 1.75em solid transparent; border-bottom: 2.85em solid #040404; left: 0.775em; top: -0.75em; } #reload { background: rgb(255 162 0); border: 0; border-radius: 1px; padding: 0.5em 0.75em; margin-left: 1.5em; cursor: pointer; outline: none; } #reload:hover { background: #54cbeb; } /* ANIMATIONS */ @-webkit-keyframes blinker { 0% { opacity:0; top:52.85%;} 40% { opacity:1; top:51%; } 50% { opacity:0; top:51%; } 60% { opacity:1; top:51%; } 100% { opacity:0; top:48.25%;} } @keyframes blinker { 0% { opacity:0; top:52.85%;} 40% { opacity:1; top:51%; } 50% { opacity:0; top:51%; } 60% { opacity:1; top:51%; } 100% { opacity:0; top:48.25%;} } @-webkit-keyframes spin { from {transform: rotate(0deg) } to {transform: rotate(-360deg);} } @keyframes spin { from {transform: rotate(0deg) } to {transform: rotate(-360deg);} } Después creamos el fichero script.js donde se define toda la lógica para calcular la cantidad de días que faltan para el nuevo año:\n//prevent loading error document.getElementById('warning').remove(); //short getElementById elem = function (id) { return document.getElementById(id); } //count until date const newYearDate = new Date(`Jan 1, ${new Date().getFullYear() + 1} 00:00:00`).getTime(); //title angles const todayDate = new Date().getTime(); const todaySecondsLeft = (newYearDate - todayDate) / 1000; const todayDays = parseInt(todaySecondsLeft / 86400); const randMer = Math.floor(Math.random() * (4 - 1 + 1)) + 1; const randVen = Math.floor(Math.random() * (10 - 4 + 1)) + 4; const randMar = Math.floor(Math.random() * (16 - 8 + 1)) + 8; const style = document.createElement('style'); style.innerHTML = '.orbit-mercury {transform: translate(-50%, -50%) rotate(' + randMer + 'deg)} .orbit-venus {transform: translate(-50%, -50%) rotate(' + randVen + 'deg)} .orbit-mars {transform: translate(-50%, -50%) rotate(' + randMar + 'deg)} .planet-mercury {transform:rotate(-' + randMer + 'deg)} .planet-venus {transform:rotate(-' + randVen + 'deg)} .planet-mars {transform:rotate(-' + randMar + 'deg)} .planet-earth {transform:rotate(' + todayDays + 'deg)} .planet-venus {transform:rotate(-' + randVen + 'deg)} '; document.head.appendChild(style); //countdown vars let days, hours, minutes, seconds; //countdown const countDown = setInterval(function () { const rightNow = new Date().getTime(); const timeTo = newYearDate - rightNow; days = Math.floor(timeTo / (1000 * 60 * 60 * 24)); hours = Math.floor((timeTo % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)); minutes = Math.floor((timeTo % (1000 * 60 * 60)) / (1000 * 60)); seconds = Math.floor((timeTo % (1000 * 60)) / 1000); if (hours \u0026lt; 10) hours = \u0026quot;0\u0026quot; + hours; if (minutes \u0026lt; 10) minutes = \u0026quot;0\u0026quot; + minutes; if (seconds \u0026lt; 10) seconds = \u0026quot;0\u0026quot; + seconds; elem(\u0026quot;cronoNewYear\u0026quot;).innerHTML = days + \u0026quot; \u0026lt;span\u0026gt;DAYS\u0026lt;/span\u0026gt; \u0026amp;nbsp;\u0026quot; + hours + \u0026quot;:\u0026quot; + minutes + \u0026quot;:\u0026quot; + seconds + \u0026quot; \u0026lt;span\u0026gt;LEFT\u0026lt;/span\u0026gt;\u0026quot;; let newDays; if (days \u0026lt; 0) { elem(\u0026quot;cronoNewYear\u0026quot;).style.display = 'none'; newDays = days.toString().substr(1); } else { newDays = \u0026quot;-\u0026quot; + days; } elem(\u0026quot;position-earth\u0026quot;).style.transform = 'translate(-50%, -50%) rotate(' + newDays + 'deg'; let solsDays; const cDays = days - 11; if (cDays \u0026lt; 0) { elem(\u0026quot;cronoWinterSolstice\u0026quot;).style.display = 'none'; } else { solsDays = cDays } elem(\u0026quot;cronoWinterSolstice\u0026quot;).innerHTML = solsDays + \u0026quot; \u0026lt;span\u0026gt;DAYS\u0026lt;/span\u0026gt; \u0026amp;nbsp;\u0026quot; + hours + \u0026quot;:\u0026quot; + minutes + \u0026quot;:\u0026quot; + seconds + \u0026quot; \u0026lt;span\u0026gt;LEFT\u0026lt;/span\u0026gt;\u0026quot;; const opacityList = document.querySelectorAll('.planet'); for (let i = 0; i \u0026lt; opacityList.length; i++) { opacityList[i].style.opacity = '1'; } if (timeTo \u0026lt; 0) { clearInterval(countDown); } }, 1000); Por último se crea un fichero index.html que contendrá todo el código html de nuestra página web. El documento html comienza con la definición del tipo de documento seguido por el lenguaje de la página, en la sección del encabezado encontramos el título, algunos metadatos así como la importación de los estilos de la página. En el cuerpo del documento hacemos usos de las clases creadas previamente para poder visualizar los planetas y sus órbitas. Al final importamos el fichero javascript creado con anterioridad:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot; \u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Countdown to New Year \u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\u0026quot;\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;./style.css\u0026quot;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- partial:index.partial.html --\u0026gt; \u0026lt;div class=\u0026quot;solar-system\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-sun\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-mercury\u0026quot; id=\u0026quot;position-mercury\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;planet planet-mercury\u0026quot; id=\u0026quot;opacity-mercury\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;assets/image/mercury.png\u0026quot; alt=\u0026quot;mercury\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-venus\u0026quot; id=\u0026quot;position-venus\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;planet planet-venus\u0026quot; id=\u0026quot;opacity-venus\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;assets/image/venus.png\u0026quot; alt=\u0026quot;venus\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-earth\u0026quot; id=\u0026quot;position-earth\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;planet planet-earth\u0026quot; id=\u0026quot;opacity-earth\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;assets/image/earth.png\u0026quot; alt=\u0026quot;earth\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-mars\u0026quot; id=\u0026quot;position-mars\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;planet planet-mars\u0026quot; id=\u0026quot;opacity-mars\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;assets/image/mars.png\u0026quot; alt=\u0026quot;mars\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;orbit orbit-asteroids\u0026quot; id=\u0026quot;position-asteroids\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;planet planet-asteroids\u0026quot; id=\u0026quot;opacity-asteroids\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;assets/image/asteroids-belt.png\u0026quot; alt=\u0026quot;asteroids\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;new-year-line\u0026quot;\u0026gt;NEW YEAR \u0026lt;span id='cronoNewYear'\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;winter-solstice-line\u0026quot;\u0026gt;WINTER SOLSTICE \u0026lt;span id=\u0026quot;cronoWinterSolstice\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026quot;warning\u0026quot;\u0026gt;\u0026lt;p\u0026gt;it seems that the earth has gone out of its orbit... \u0026lt;button id=\u0026quot;reload\u0026quot; onclick=\u0026quot;location.reload()\u0026quot;\u0026gt;RE-ORBIT\u0026lt;/button\u0026gt;\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;!-- partial --\u0026gt; \u0026lt;script src=\u0026quot;./script.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; figure.lazy { display: none; } Todo el código se puede descargar desde GitHub en el siguiente link https://github.com/yacosta738/countdown-to-new-year\n","dateformatted":"27, December 2020","dateiso":"2020-12-27T21:34:00+02:00","ref":"/nomada.digital/cuenta-regresiva-para-el-nuevo-a%C3%B1o/","summary":"After switching from Windows to Mac, I have reconsidered a few of the applications I use. To my own surprise I ended up with a paid one that’s only available on Apple devices – Bear.","tags":["Javascript"],"title":"Cuenta regresiva para el nuevo Año"},{"content":" figure.lazy { display: none; } El selector de imágenes es un componente común que a menudo se necesita para cambiar las fotos de los perfiles de usuario entre muchas otras opciones donde es necesario subir una imagen. Con el fin de proveer a nuestra aplicación de la opción de subir imágenes seleccionadas desde nuestro dispositivo, ya sea en la cámara o la galería, usaremos el complemento hecho por desarrolladores de Flutter.\nPaso 1: Agregar la dependencia a su archivo pubspec.yaml. image_picker: ^0.6.7+14 Paso 2: Configurar las plataformas nativas A continuación, necesitamos configurar los ajustes nativos. Para la plataforma Android, no se necesita configurar nada. Para iOS, abra el archivo Info.plist que se encuentra en la carpeta ios/Runner y agregue las siguientes claves.\n\u0026lt;key\u0026gt;NSPhotoLibraryUsageDescription\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;Allow access to photo library\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;NSCameraUsageDescription\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;Allow access to camera to capture photos\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;NSMicrophoneUsageDescription\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;Allow access to microphone\u0026lt;/string\u0026gt; Paso 3: Función de selector de imágenes En la clase State de StatefulWidget de nuestra pantalla, declare una variable de tipo File para contener la imagen elegida por el usuario.\nFile _image; Ahora escriba dos funciones para seleccionar imágenes a través de la cámara y la galería de fotos, respectivamente. El parámetro opcional imageQuality acepta cualquier valor entre 0 y 100, este parámetro se puede ajustar según el tamaño y la calidad que requiera la aplicación. Después de obtener el archivo de imagen, lo guardamos en la variable _image y llamamos a setState () para que se pueda mostrar en la pantalla.\n _imgFromCamera() async { File image = await ImagePicker.pickImage( source: ImageSource.camera, imageQuality: 50 ); setState(() { _image = image; }); } _imgFromGallery() async { File image = await ImagePicker.pickImage( source: ImageSource.gallery, imageQuality: 50 ); setState(() { _image = image; }); } Paso 4: Crear un selector de opciones para seleccionar la cámara o la galería A continuación, se observa la función para mostrar un bottom sheet para que el usuario elija la opción de cámara o galería.\nvoid _showPicker(context) { showModalBottomSheet( context: context, builder: (BuildContext bc) { return SafeArea( child: Container( child: new Wrap( children: \u0026lt;Widget\u0026gt;[ new ListTile( leading: new Icon(Icons.photo_library), title: new Text('Photo Library'), onTap: () { _imgFromGallery(); Navigator.of(context).pop(); }), new ListTile( leading: new Icon(Icons.photo_camera), title: new Text('Camera'), onTap: () { _imgFromCamera(); Navigator.of(context).pop(); }, ), ], ), ), ); } ); } Paso 5: Crear y configurar la vista de imagen en pantalla Finalmente, creemos un soporte de imagen de perfil en la pantalla, que abre el selector al hacer clic y muestra la imagen seleccionada.\n@override Widget build(BuildContext context) { return Scaffold( appBar: AppBar(), body: Column( children: \u0026lt;Widget\u0026gt;[ SizedBox( height: 32, ), Center( child: GestureDetector( onTap: () { _showPicker(context); }, child: CircleAvatar( radius: 55, backgroundColor: Color(0xffFDCF09), child: _image != null ? ClipRRect( borderRadius: BorderRadius.circular(50), child: Image.file( _image, width: 100, height: 100, fit: BoxFit.fitHeight, ), ) : Container( decoration: BoxDecoration( color: Colors.grey[200], borderRadius: BorderRadius.circular(50)), width: 100, height: 100, child: Icon( Icons.camera_alt, color: Colors.grey[800], ), ), ), ), ) ], ), ); } Listo, ejecute la aplicación y debería ver algo como esto.\n figure.lazy { display: none; } ","dateformatted":"18, December 2020","dateiso":"2020-12-18T21:34:00+02:00","ref":"/nomada.digital/agregar-selector-imagen-flutter/","summary":"After switching from Windows to Mac, I have reconsidered a few of the applications I use. To my own surprise I ended up with a paid one that’s only available on Apple devices – Bear.","tags":["Flutter"],"title":"Agregar selector de imagen en flutter"},{"content":"","dateformatted":"5, September 2017","dateiso":"2017-09-05T07:43:59+02:00","ref":"/nomada.digital/es/kortkommandon-windows7/","summary":"","tags":null,"title":"Kortkommandon Windows 7"}]